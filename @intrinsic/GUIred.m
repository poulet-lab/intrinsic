function GUIred(obj)

margin = 6;
obj.GUIgeneric('Red',margin,20)
hold(obj.h.axes.red,'on')

% load settings
obj.h.axes.red.UserData = 1;
redSigmaSpatial         = obj.loadVar('redSigmaSpatial',0);
redSigmaTemporal        = obj.loadVar('redSigmaTemporal',0);

set(obj.h.image.red, ...
    'ButtonDownFcn',    @obj.redClick)
obj.h.line = plot(obj.Line.x,obj.Line.y,...
    'pickableparts',    'none', ...
    'linewidth',        1, ...
    'color',            'k');
obj.h.point.red = plot(obj.h.axes.red, ...
    obj.PointCoords(1),obj.PointCoords(2),...
    'pickableparts',    'none', ...
    'marker',           'o', ...
    'markerfacecolor',  'k', ...
    'markeredgecolor',  'w', ...
    'markersize',       5, ...
    'linewidth',        1);

tmp = uicontrol(obj.h.fig.red, ...
    'Style',            'Text', ...
    'String',           'View:', ...
    'Position',         [margin margin-1 35 18], ...
    'Horizontal',       'left');
obj.h.popup.redView = uicontrol(obj.h.fig.red, ...
    'Style',            'Popupmenu', ...
    'String',           {'dF/F','Difference','Difference (neg)',...
        'Difference (pos)','Baseline','Stimulus','Baseline (log)','Stimulus (log)'}, ...
    'Value',            1, ...
    'Position',         [sum(tmp.Position([1 3])) margin+2 120 20], ...
    'Horizontal',       'right', ...
    'Callback',         @obj.redView, ...
    'Tooltip',          'Graphical Representation of Data');
tmp = uicontrol(obj.h.fig.red, ...
    'Style',            'Text', ...
    'String',           '; Sigma:', ...
    'Position',         [sum(obj.h.popup.redView.Position([1 3])) margin-1 40 18], ...
    'Horizontal',       'left');
obj.h.edit.redSigmaSpatial = uicontrol(obj.h.fig.red, ...
    'Style',            'Edit', ...
    'String',           redSigmaSpatial, ...
    'Position',         [sum(tmp.Position([1 3])) margin 18 20], ...
    'Horizontal',       'right', ...
    'Callback',         @sigma_spatial, ...
    'Tooltip',          'Width of spatial Gaussian Filter');
tmp = uicontrol(obj.h.fig.red, ...
    'Style',            'Text', ...
    'String',           'px; ', ...
    'Position',         [sum(obj.h.edit.redSigmaSpatial.Position([1 3])) ...
    margin-1 20 18], ...
    'Horizontal',       'left');
obj.h.edit.redSigmaTemporal = uicontrol(obj.h.fig.red, ...
    'Style',            'Edit', ...
    'String',           redSigmaTemporal, ...
    'Position',         [sum(tmp.Position([1 3])) margin 35 20], ...
    'Horizontal',       'right', ...
    'Callback',         @sigma_temporal, ...
    'Tooltip',          'Width of temporal Gaussian Filter');
uicontrol(obj.h.fig.red, ...
    'Style',            'Text', ...
    'String',           'ms', ...
    'Position',         [sum(obj.h.edit.redSigmaTemporal.Position([1 3])) ...
    margin-1 55 18], ...
    'Horizontal',       'left');
obj.h.push.redPlayback = uicontrol(obj.h.fig.red, ...
    'CData',            obj.icon('red_movie.png'), ...
    'TooltipString',    'Play Movie', ...
    'Position',         [obj.h.fig.red.Position(3)-margin+1-24 ...
    1.5*margin-4 24 24], ...
    'Callback',         @obj.redPlayback);

obj.restoreWindowPositions('red')


function sigma_spatial(h,~)
    val = str2double(h.String);
    if isempty(val) || val<=0 || isnan(val)
        val         = 0;
        h.String    = val;
    end
    obj.Settings.redSigmaSpatial = val;
    obj.update_redImage
	obj.redView(obj.h.popup.redView);
	figure(obj.h.fig.red)
    obj.update_plots
end

function sigma_temporal(h,~)
    val = str2double(h.String);
    if isempty(val) || val<=0 || isnan(val)
        val         = 0;
        h.String    = val;
    end
    obj.Settings.redSigmaTemporal = val;
    obj.processSubStack
	obj.redView(obj.h.popup.redView);
	figure(obj.h.fig.red)
    obj.update_plots
end

end
